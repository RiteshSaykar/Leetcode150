import java.util.*;

class Solution {
    public int[] topKFrequent(int[] nums, int k) {
        //Brute force

        // HashMap<Integer, Integer> map = new HashMap<>();
        // for (int num : nums) {
        //     map.put(num, map.getOrDefault(num, 0) + 1);
        // }
        // List<Map.Entry<Integer, Integer>> entryList = new ArrayList<>(map.entrySet());
        // entryList.sort((a, b) -> b.getValue() - a.getValue());

        // List<Integer> result = new ArrayList<>();
        // for (int i = 0; i < k && i < entryList.size(); i++) {
        //     result.add(entryList.get(i).getKey());
        // }

        // int[] ans = new int[result.size()];
        // for (int i = 0; i < result.size(); i++) {
        //     ans[i] = result.get(i);
        // }
        // return ans;

        Map<Integer,Integer> map=new HashMap<>();

        for(int num:nums)
        {
            map.put(num,map.getOrDefault(num,0)+1);
        }
        List<Integer>[] freq=new List[nums.length+1];

        for(int i=0;i<freq.length;i++)
        {
            freq[i]=new ArrayList<>();
        }

        for(Map.Entry<Integer,Integer> entry:map.entrySet())
        {
            freq[entry.getValue()].add(entry.getKey());
        }

        int[] res=new int[k];
        int index=0;
        for(int i=freq.length - 1; i > 0 && index < k; i--) {
            for(int n:freq[i])
            {
                 res[index++] = n;
                if (index == k) {
                    return res;
                }
            }
        }
        return res;

            }
}
